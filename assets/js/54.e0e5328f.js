(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{419:function(_,t,a){"use strict";a.r(t);var v=a(44),r=Object(v.a)({},(function(){var _=this,t=_.$createElement,a=_._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("h1",{attrs:{id:"to-do-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#to-do-list"}},[_._v("#")]),_._v(" to do list")]),_._v(" "),a("h2",{attrs:{id:"_6-24"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-24"}},[_._v("#")]),_._v(" 6.24")]),_._v(" "),a("ul",[a("li",[_._v("rocketmq 简单使用")]),_._v(" "),a("li",[_._v("spring boot 源码阅读（学习命名）")]),_._v(" "),a("li",[_._v("Spring Reactive")]),_._v(" "),a("li",[_._v("Spring Integration")]),_._v(" "),a("li",[_._v("消息处理的Event Loop和Actor模型")]),_._v(" "),a("li",[_._v("CompletionStage（completefuture）")]),_._v(" "),a("li",[_._v("GraalVM")]),_._v(" "),a("li",[_._v("@Autowire 实现逻辑")])]),_._v(" "),a("h2",{attrs:{id:"_7-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1"}},[_._v("#")]),_._v(" 7.1")]),_._v(" "),a("p",[_._v("Spring 揭秘")]),_._v(" "),a("p",[_._v("Spring 实战")]),_._v(" "),a("p",[_._v("Netty 实战")]),_._v(" "),a("h2",{attrs:{id:"_7-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-6"}},[_._v("#")]),_._v(" 7.6")]),_._v(" "),a("p",[_._v("redis 分布式锁")]),_._v(" "),a("p",[_._v("redis 缓冲区")]),_._v(" "),a("p",[_._v("BeanFactory")]),_._v(" "),a("p",[_._v("Paxos协议")]),_._v(" "),a("h2",{attrs:{id:"_7-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-12"}},[_._v("#")]),_._v(" 7.12")]),_._v(" "),a("p",[_._v("MySQL 所有知识")]),_._v(" "),a("p",[_._v("Linux 排查问题方法，熟悉指令")]),_._v(" "),a("h2",{attrs:{id:"_7-26"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-26"}},[_._v("#")]),_._v(" 7.26")]),_._v(" "),a("p",[_._v("一致性算法：")]),_._v(" "),a("p",[_._v("从早期的 Paxos 算法，再到后面衍生的 zab 协议（参考：A simple totally ordered broadcast protocol），提供了当下可靠的分布式锁的解决方案。再到后来的 Raft 算法（In Search of an Understandable Consensus Algorithm），也都是分布式系统设计里面需要了解到的一些知识要点。")]),_._v(" "),a("h2",{attrs:{id:"_8-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-5"}},[_._v("#")]),_._v(" 8.5")]),_._v(" "),a("p",[_._v("分布式系统中的相关知识")]),_._v(" "),a("p",[_._v("mongo笔记")]),_._v(" "),a("p",[_._v("长轮询例子")]),_._v(" "),a("p",[_._v("aop @Poincut 常用例子")]),_._v(" "),a("h2",{attrs:{id:"_8-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-6"}},[_._v("#")]),_._v(" 8.6")]),_._v(" "),a("p",[_._v("nacos naming 源码阅读")]),_._v(" "),a("p",[_._v("raft 协议以及 jraft 协议")]),_._v(" "),a("h2",{attrs:{id:"_8-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-12"}},[_._v("#")]),_._v(" 8.12")]),_._v(" "),a("p",[_._v("dubbo 柔性调度")]),_._v(" "),a("p",[_._v("p2c 算法")]),_._v(" "),a("p",[_._v("rsocket 的 leasing 机制")]),_._v(" "),a("p",[_._v("CPU 时间分片")]),_._v(" "),a("h2",{attrs:{id:"_8-19"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-19"}},[_._v("#")]),_._v(" 8.19")]),_._v(" "),a("p",[_._v("file descriptor 文件描述符（epoll中弹出）")]),_._v(" "),a("h2",{attrs:{id:"_8-24"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-24"}},[_._v("#")]),_._v(" 8.24")]),_._v(" "),a("p",[_._v("JVM")]),_._v(" "),a("h2",{attrs:{id:"_8-25"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-25"}},[_._v("#")]),_._v(" 8.25")]),_._v(" "),a("p",[_._v("自定义classloader")]),_._v(" "),a("h2",{attrs:{id:"_8-30"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-30"}},[_._v("#")]),_._v(" 8.30")]),_._v(" "),a("p",[_._v("redis集群相关")]),_._v(" "),a("p",[_._v("基础")]),_._v(" "),a("h2",{attrs:{id:"_10-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-11"}},[_._v("#")]),_._v(" 10.11")]),_._v(" "),a("p",[_._v("redis 实现的限流算法 - lua 脚本方式")]),_._v(" "),a("p",[_._v("rpc 自定义协议")]),_._v(" "),a("h2",{attrs:{id:"_10-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-12"}},[_._v("#")]),_._v(" 10.12")]),_._v(" "),a("p",[_._v("filter")]),_._v(" "),a("p",[_._v("inter")]),_._v(" "),a("p",[_._v("spring security")]),_._v(" "),a("p",[_._v("shiro")])])}),[],!1,null,null,null);t.default=r.exports}}]);