(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{419:function(t,a,r){"use strict";r.r(a);var e=r(44),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"分布式锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁"}},[t._v("#")]),t._v(" 分布式锁")]),t._v(" "),r("h2",{attrs:{id:"什么是分布式锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是分布式锁"}},[t._v("#")]),t._v(" 什么是分布式锁")]),t._v(" "),r("p",[t._v("单机情况下，当多线程操作共享变量时，为了保证数据的一致性，同一时间只能有一个线程在操作该变量，这时候就得上锁。")]),t._v(" "),r("p",[t._v("当在集群这种多机的情况时，单机上的锁无法被其他机器上的线程获取，也就是说不能保证在同一时间只能有一个线程操作该变量，这个时候就得引入一个中间层，保证多机情况下每一个线程都能访问到锁，这就是分布式锁。")]),t._v(" "),r("h2",{attrs:{id:"分布式锁的特点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁的特点"}},[t._v("#")]),t._v(" 分布式锁的特点")]),t._v(" "),r("ul",[r("li",[t._v("互斥性：和我们本地锁一样互斥性是最基本，但是分布式锁需要保证在不同节点的不同线程的互斥。")]),t._v(" "),r("li",[t._v("可重入性：同一个节点上的同一个线程如果获取了锁之后那么也可以再次获取这个锁。")]),t._v(" "),r("li",[t._v("锁超时：和本地锁一样支持锁超时，防止死锁。")]),t._v(" "),r("li",[t._v("高效，高可用：加锁和解锁需要高效，同时也需要保证高可用防止分布式锁失效，可以增加降级。")]),t._v(" "),r("li",[t._v("支持阻塞和非阻塞：和ReentrantLock一样支持lock和trylock以及tryLock(long timeOut)。")]),t._v(" "),r("li",[t._v("支持公平锁和非公平锁(可选)：公平锁的意思是按照请求加锁的顺序获得锁，非公平锁就相反是无序的。这个一般来说实现的比较少。")])]),t._v(" "),r("h2",{attrs:{id:"分布式锁的实现方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁的实现方式"}},[t._v("#")]),t._v(" 分布式锁的实现方式")]),t._v(" "),r("ul",[r("li",[t._v("数据库")]),t._v(" "),r("li",[t._v("Zookeeper")]),t._v(" "),r("li",[t._v("Redis")]),t._v(" "),r("li",[t._v("...")])]),t._v(" "),r("h2",{attrs:{id:"数据库分布式锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据库分布式锁"}},[t._v("#")]),t._v(" 数据库分布式锁")]),t._v(" "),r("h3",{attrs:{id:"悲观锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#悲观锁"}},[t._v("#")]),t._v(" 悲观锁")]),t._v(" "),r("p",[t._v("for update 获取行锁")]),t._v(" "),r("h3",{attrs:{id:"乐观锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#乐观锁"}},[t._v("#")]),t._v(" 乐观锁")]),t._v(" "),r("p",[t._v("version 版本控制")]),t._v(" "),r("h2",{attrs:{id:"zookeeper-分布式锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper-分布式锁"}},[t._v("#")]),t._v(" Zookeeper 分布式锁")]),t._v(" "),r("h2",{attrs:{id:"redis-分布式锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redis-分布式锁"}},[t._v("#")]),t._v(" Redis 分布式锁")]),t._v(" "),r("h2",{attrs:{id:"多节点分布式锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#多节点分布式锁"}},[t._v("#")]),t._v(" 多节点分布式锁")]),t._v(" "),r("h3",{attrs:{id:"zookeeper-集群"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper-集群"}},[t._v("#")]),t._v(" Zookeeper 集群")]),t._v(" "),r("h3",{attrs:{id:"redlock"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redlock"}},[t._v("#")]),t._v(" RedLock")])])}),[],!1,null,null,null);a.default=s.exports}}]);